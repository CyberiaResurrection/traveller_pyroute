{# The statistics table for the top of the summary table #}
{% macro stats_table(stats) -%}
|align="right"|{{stats.number}}
|align="right"|{{'{:,d}'.format(stats.population)}}
|align="right"|{{'{:,d}'.format(stats.economy)}}
|align="right"|{{'{:,d}'.format(stats.percapita)}}
|align="right"|{{'{:,d}'.format(stats.sum_ru)}}
|align="right"|{{'{:,d}'.format(stats.tradeVol // (10**9))}}
|align="right"|{{'{:,d}'.format(stats.trade // (10**9))}}
|align="right"|{{'{:,d}'.format(stats.tradeExt // (10**9))}}
|align="right"|{{'{:,d}'.format(stats.shipyards)}}
|align="right"|{{'{:,.2f}'.format(stats.col_be)}}
|align="right"|{{'{:,d}'.format(stats.passengers // 1000000)}}
|align="right"|{{'{:,d}'.format(stats.spa_people)}}
|align="right"|{{'{:,d}'.format(stats.eti_worlds)}}
|align="right"|{{'{:,d}'.format(stats.eti_cargo * 50)}}
|align="right"|{{'{:,d}'.format(stats.eti_pass * 50)}}
{% endmacro -%}

{# The basic long text description of the area (galaxy, subsector, sector) #}
{% macro text_area_long(area_type, area, plural) -%}
The {{area.wiki_name()}} {{area_type}} has {{area.stats.number}} worlds {{ text_area_population(plural, area) }}
{{ economy (plural, area) }}
{{ homeworlds (plural, area) }}
There are {{ get_count(plural, area.stats.code_counts.get('Hi', 0), 'world', ' High population (Hi)') }},
{{ get_count(plural, area.stats.code_counts.get('Ph', 0), 'world', ' Moderate population (Ph)') }},
{{ get_count(plural, area.stats.code_counts.get('Ni', 0), 'world', ' Non-industrial (Ni)') }},
{{ get_count(plural, area.stats.code_counts.get('Lo', 0), 'world', ' Low population (Lo)') }}, and
{{ get_count(plural, area.stats.code_counts.get('Ba', 0), 'world', ' Barren (Ba)') }}.
There are {{ get_count(plural, area.stats.code_counts.get('Ag', 0), 'world', ' Agricultural (Ag)') }} versus
{{ get_count(plural, area.stats.code_counts.get('Pa', 0), 'world', ' Pre-Agricultural (Pa)') }} and 
{{ get_count(plural, area.stats.code_counts.get('Na', 0), 'world', ' Non-Agricultural (Na)')  }}.
There are {{ get_count(plural, area.stats.code_counts.get('Ri', 0), 'world', ' Rich (Ri)') }} versus
{{ get_count(plural, area.stats.code_counts.get('In', 0), 'world', ' Industrial (In)') }}.
There are {{get_count(plural, area.stats.code_counts.get('As', 0), 'belt',  ' Asteroid (As)') }},
{{ get_count(plural, area.stats.code_counts.get('De', 0), 'world', ' Desert (De)') }},
{{ get_count(plural, area.stats.code_counts.get('Ga', 0), 'world', ' Garden (Ga)') }},
{{ get_count(plural, area.stats.code_counts.get('Ic', 0), 'world', ' Ice-capped (Ic)') }},
{{ get_count(plural, area.stats.code_counts.get('Po', 0), 'world', ' Poor (Po)') }}, 
{{ get_count(plural, area.stats.code_counts.get('Va', 0), 'world', ' Vacuum (Va)') }}, and
{{ get_count(plural, area.stats.code_counts.get('Wa', 0) + area.stats.code_counts.get('Oc', 0), 'world', ' Water (Wa) or Ocean (Oc)') }}.
There are {{ get_count(plural,  area.stats.naval_bases, 'Naval base') }} in the {{ area_type }}, 
{{ get_count(plural, area.stats.scout_bases, 'Scout base') }}, and {{ get_count(plural, area.stats.way_stations, 'Way station') }}.
Of the  {{ get_count(plural, area.stats.number, 'system') }}, {{area.stats.gg_count}} have native gas giants.
{%- endmacro -%}


{# The top level statistics for the allegiances, similar to above #}
{%- macro allegiance_statistics(plural, area) -%}
{%- for allegiance in area.alg_sorted -%}
    {%- if allegiance.is_unclaimed() -%}
There are {{ get_count(plural, allegiance.stats.number, 'system', 'unclaimed or unexplored') }} in {{ area.wiki_name() }}.
    {%- elif allegiance.is_wilds() -%}
There are {{ get_count (plural, allegiance.stats.number, '') }} {{ allegiance.wiki_name() }} worlds in {{ area.wiki_name() }} with an {{ text_area_population(plural, allegiance) }}
    {%- elif allegiance.is_client_state() -%}
The {{ allegiance.wiki_name() }} in the {{ area.wiki_name() }} encompasses {{ world_counts(plural, allegiance, area)}} {{ economy(plural, allegiance) }}
    {%- else -%}
The {{ allegiance.wiki_name() }} in {{ area.wiki_name() }} has jurisdiction over {{ world_counts(plural, allegiance, area) }} {{ economy(plural, allegiance) }}
    {%- endif %}

{% endfor %}
{%- endmacro -%}


{%- macro top_level_summary(global_stats) -%}
{| class="wikitable"
| Systems ||  {{'{:,d}'.format(global_stats.number)}} 
|-
| Population || {{'{:,d}'.format(global_stats.population)}} million
|-
| Gross Total Product ||  BCr{{'{:,d}'.format(global_stats.economy)}} 
|-
| Per capita GSP || Cr{{'{:,d}'.format(global_stats.percapita)}}
|-
| Trade || BCr{{'{:,d}'.format(global_stats.trade // (10**9))}} 
|}
{%- endmacro -%}

{# Macros to aid in the processing above #}

{%- macro text_area_population(plural, area) -%}
an estimated population of {{ population(area.stats.population) }} 
{%- if area.stats.pop_groups.items() %} (
{%- for code, pop in area.stats.pop_groups.items() -%}
{{code}}: {{population(pop)}}{%- if not loop.last -%}, {% endif -%}
{%- endfor -%}). 
{%- endif -%}
{%- endmacro -%}

{%- macro homeworlds(plural, area) -%}
{%- if area.stats.homeworld_count() > 0 -%}
{%- set count = plural.num(area.stats.homeworld_count()) -%}
Of these there {{plural.inflect("plural_verb('is')") }} {{ get_count(plural, area.stats.homeworld_count(), 'homeworld') }}.
{%- endif -%}
{%- endmacro -%}

{%- macro population (population) -%}
{%- if population >= 1000 -%}
{{ '{:,d}'.format(population // 1000) }} billion
{%- elif population >= 1 -%}
{{ '{:,d}'.format(population) }} million
{%- else -%}
less than 1 million
{%- endif -%}
{%- endmacro -%}

{%- macro get_count(plural, count, text, lead_text="") -%}
{%- set count = plural.num(count) -%}
{%- set c_text = plural.number_to_words(count, zero='no', threshold=10) -%}
{{ plural.inflect("{0}{1} plural('{2}')".format(c_text, lead_text, text)) }}
{%- endmacro -%}

{%- macro high_pop_worlds(plural, area)-%}
{%-set high_pop = plural.num(area.stats.high_pop_worlds_count()) -%}
The highest population {{plural.inflect("plural('world') plural_verb('is')") }} {{ plural.join( area.stats.high_pop_worlds_list()) }}.
{%- endmacro -%}

{%- macro high_tech_worlds(plural, area) -%}
{%- set high_tech = plural.num(area.stats.high_tech_worlds_count()) -%}
The highest tech level is {{area.stats.maxTL}} at {{plural.join(area.stats.high_tech_worlds_list())}}.
{%- endmacro -%}

{%- macro world_counts(plural, area, contain) -%}
{%- if contain and contain.stats.number == area.stats.number %}
all of the worlds
{%- elif area.worlds -%}
{{ get_count(plural, area.stats.number, 'world') }} with an {{ text_area_population(plural, area) }}
{%- else -%}
no charted worlds
{%- endif -%}
{%- endmacro -%}

{%- macro economy (plural, area) -%}
The economy is BCr{{ '{:,d}'.format(area.stats.economy) }} with a per capita income of Cr{{ '{:,d}'.format(area.stats.percapita ) }}.
{%- if area.stats.population > 0 -%}
{{ high_pop_worlds(plural, area) }}
The average technology level is {{area.stats.TLmean|int}} (with most between {{(area.stats.TLmean - area.stats.TLstddev)|int}} and {{(area.stats.TLmean + area.stats.TLstddev)|int}}). {{ high_tech_worlds(plural, area) }}
{%- endif -%}
{%- endmacro -%}

{%- macro uwp_table(table_name, uwp_code, global_stats) -%}
{| class="wikitable"
|+ colspan=3 style="text-align:center" | {{ table_name }}
! Code !! Count !! % by Pop !! Per Capita
{%- for code,stats in uwp_code | dictsort %}
|-
| {{ code }} || {{stats.number}} 
| {%- if global_stats.population > 0 -%} {{ "{:d}".format(stats.population // (global_stats.population // 100)) }}% {%- else -%} 0% {%- endif %}
| {{ stats.percapita }}
{%- endfor %}
|}
{%- endmacro -%}
