{# The statistics table for the top of the summary table #}
{% macro stats_table(stats, global_stats) -%}
|align="right"|{{stats.number}}
|align="right"|{{'{:,d}'.format(stats.population)}}
|align="right"|{{"{:5.2f}".format(stats.population / (global_stats.population / 100.0)) }}%
|align="right"|{{'{:,d}'.format(stats.economy)}}
|align="right"|{{'{:,d}'.format(stats.percapita)}}
|align="right"|{{'{:,d}'.format(stats.sum_ru)}}
|align="right"|{{'{:,d}'.format(stats.tradeVol // (10**9))}}
|align="right"|{{'{:,d}'.format(stats.trade // (10**9))}}
|align="right"|{{'{:,d}'.format(stats.tradeExt // (10**9))}}
|align="right"|{{'{:,d}'.format(stats.shipyards)}}
|align="right"|{{'{:,.2f}'.format(stats.col_be)}}
|align="right"|{{'{:,d}'.format(stats.passengers // 1000000)}}
|align="right"|{{'{:,d}'.format(stats.spa_people)}}
{% endmacro -%}

{# The basic long text description of the area (galaxy, subsector, sector) #}
{% macro text_area_long(area_type, area, plural) -%}
{%- if area_type == 'subsector' -%}
{{area.wiki_name()}}, {{area_type}} {{area.position}} of {{area.sector.wiki_name()}}
{%- else -%}
The {{area.wiki_name()}} {{area_type}}
{%- endif %} has {{area.stats.number}} worlds {{ text_area_population(plural, area) }} {{ economy (plural, area) }} {{ homeworlds (plural, area) }}
There are {{ get_count(plural, area.stats.code_counts.get('Hi', 0), 'world', ' High population (Hi)') }}, 
{{ get_count(plural, area.stats.code_counts.get('Ph', 0), 'world', ' Moderate population (Ph)') }},
{{ get_count(plural, area.stats.code_counts.get('Ni', 0), 'world', ' Non-industrial (Ni)') }},
{{ get_count(plural, area.stats.code_counts.get('Lo', 0), 'world', ' Low population (Lo)') }}, and
{{ get_count(plural, area.stats.code_counts.get('Ba', 0), 'world', ' Barren (Ba)') }}.
There are {{ get_count(plural, area.stats.code_counts.get('Ag', 0), 'world', ' [[Agricultural World|Agricultural]] (Ag)') }} versus
{{ get_count(plural, area.stats.code_counts.get('Pa', 0), 'world', ' Pre-Agricultural (Pa)') }} and 
{{ get_count(plural, area.stats.code_counts.get('Na', 0), 'world', ' [[Nonagricultural World|Non-Agricultural]] (Na)')  }}.
There are {{ get_count(plural, area.stats.code_counts.get('Ri', 0), 'world', ' [[Rich World|Rich]] (Ri)') }} versus
{{ get_count(plural, area.stats.code_counts.get('In', 0), 'world', ' [[Industrial World|Industrial]] (In)') }}.
There are {{get_count(plural, area.stats.code_counts.get('As', 0), 'belt',  ' [[Asteroid Belt World|Asteroid]] (As)') }},
{{ get_count(plural, area.stats.code_counts.get('De', 0), 'world', ' [[Desert World|Desert]] (De)') }},
{{ get_count(plural, area.stats.code_counts.get('Ga', 0), 'world', ' [[Garden World|Garden]] (Ga)') }},
{{ get_count(plural, area.stats.code_counts.get('Ic', 0), 'world', ' [[Ice World|Ice-capped]] (Ic)') }},
{{ get_count(plural, area.stats.code_counts.get('Po', 0), 'world', ' [[Poor World|Poor]] (Po)') }}, 
{{ get_count(plural, area.stats.code_counts.get('Va', 0), 'world', ' [[Vacuum World|Vacuum]] (Va)') }}, and
{{ get_count(plural, area.stats.code_counts.get('Wa', 0) + area.stats.code_counts.get('Oc', 0), 'world', ' [[Water World|Water]] (Wa) or [[Ocean World|Ocean]] (Oc)') }}.
{{ bases(plural, area.stats.bases, area) }}
{%- if area.stats.number > 0 %}

{{area.wiki_name()}} {{area_type}} contains {{ get_count(plural, area.stats.stars, 'star') }} and {{ get_count(plural, area.stats.worlds, 'identified planet') }}; {{get_count(plural, area.stats.star_count.get(1, 0), 'monostellar system') }},
{{ get_count(plural, area.stats.star_count.get(2,0), 'binary system') }}, {{get_count(plural, area.stats.star_count.get(3, 0), 'trinary system') }}, and
{{get_count(plural, area.stats.star_count.get(4, 0) + area.stats.star_count.get(5, 0) + area.stats.star_count.get(6,0), 'system')}} with four or more stars.
{{area.stats.gg_count}} of the {{ get_count(plural, area.stats.number, 'system') }} ({{((area.stats.gg_count/area.stats.number)*100)|int}}%) have native gas giants.
{%- endif -%}
{%- endmacro -%}


{# The top level statistics for the allegiances, similar to above #}
{%- macro allegiance_statistics(plural, area) -%}
{%- for allegiance in area.alg_sorted -%}
    {%- if allegiance.is_unclaimed() -%}
There are {{ get_count(plural, allegiance.stats.number, 'system', 'unclaimed or unexplored') }} in {{ area.wiki_name() }}.
    {% elif allegiance.is_wilds() -%}
There are {{ get_count (plural, allegiance.stats.number, '') }} {{ allegiance.wiki_name() }} worlds in {{ area.wiki_name() }} with an {{ text_area_population(plural, allegiance) }}
    {% elif allegiance.is_client_state() -%}
The {{ allegiance.wiki_name() }} in the {{ area.wiki_name() }} encompasses {{ world_counts(plural, allegiance, area)}}
    {%  else -%}
The {{ allegiance.wiki_name() }} in {{ area.wiki_name() }} has jurisdiction over {{ world_counts(plural, allegiance, area) }} {{ economy(plural, allegiance) }} {{ bases(plural, allegiance.stats.bases, allegiance) }}
{{ allegiance_capitals_text (allegiance) }}
    {% endif %}
{% endfor -%}
{%- endmacro -%}


{%- macro top_level_summary(global_stats, sectors) -%}
{| class="wikitable"
| Sectors || {{ sectors.values() | count }} 
|-
| Systems ||  {{'{:,d}'.format(global_stats.number)}} 
|-
| Population || {{'{:,d}'.format(global_stats.population)}} million
|-
| Gross Total Product ||  BCr{{'{:,d}'.format(global_stats.economy)}} 
|-
| Per capita GSP || Cr{{'{:,d}'.format(global_stats.percapita)}}
|-
| Trade || BCr{{'{:,d}'.format(global_stats.trade // (10**9))}} 
|}
{%- endmacro -%}


{% macro allegiance_capitals_text(aleg) -%}
{%- for world in aleg.stats.otherCp %}
* The capital of {{ aleg.wiki_name() }} is {{ world.wiki_name() }}.
{%- endfor -%}
{%- for world in aleg.stats.sectorCp %}
* The {{aleg.wiki_name() }} sector capital is {{ world.wiki_name() }}.
{%- endfor -%}
{%- for world in aleg.stats.subsectorCp %}
* The {{aleg.wiki_name() }} subsector capital of {{ world.sector.subsectors[world.subsector()].wiki_name() }} is {{ world.wiki_name() }}
{%- endfor -%}
{%- endmacro -%}

{# Macros to aid in the processing above #}

{%- macro text_area_population(plural, area) -%}
with an estimated population of {{ population(area.stats.population) }}. 
{%- endmacro -%}

{%- macro homeworlds(plural, area) -%}
{%- if area.stats.homeworld_count() > 0 -%}
{%- set count = plural.num(area.stats.homeworld_count()) -%}
There {{plural.inflect("plural_verb('is')") }} {{ get_count(plural, area.stats.homeworld_count(), 'homeworld') }}. 
{%- endif -%}
{%- endmacro -%}

{%- macro population (population) -%}
{%- if population >= 1000 -%}
{{ '{:,d}'.format(population // 1000) }} billion
{%- elif population >= 1 -%}
{{ '{:,d}'.format(population) }} million
{%- elif population < 0 -%}
extinct
{%- else -%}
less than 1 million
{%- endif -%}
{%- endmacro -%}

{%- macro get_count(plural, count, text, lead_text="") -%}
{%- set count = plural.num(count) -%}
{%- set c_text = plural.number_to_words(count, zero='no', threshold=10) -%}
{{ plural.inflect("{0}{1} plural('{2}')".format(c_text, lead_text, text)) }}
{%- endmacro -%}

{%- macro high_pop_worlds(plural, area)-%}
{%-set high_pop = plural.num(area.stats.high_pop_worlds_count()) -%}
The highest population {{plural.inflect("plural('world') plural_verb('is')") }} {{ plural.join( area.stats.high_pop_worlds_list()) }}.
{%- endmacro -%}

{%- macro high_tech_worlds(plural, area) -%}
{%- set high_tech = plural.num(area.stats.high_tech_worlds_count()) -%}
The highest technology level is {{area.stats.maxTL}} at {{plural.join(area.stats.high_tech_worlds_list())}}.
{%- endmacro -%}

{%- macro world_counts(plural, area, contain) -%}
{%- if contain and contain.stats.number == area.stats.number -%}all of the worlds
{%- elif area.worlds -%}{{ get_count(plural, area.stats.number, 'world') }} {{ text_area_population(plural, area) }}
{%- else -%}no charted worlds
{%- endif -%}
{%- endmacro -%}

{%- macro economy (plural, area) -%}
{%- if area.stats.economy > 0 -%}The economy is BCr{{ '{:,d}'.format(area.stats.economy) }}
{%- if area.stats.tradeVol > 0 %} supporting an interstellar trade of BCr{{ '{:,d}'.format(area.stats.tradeVol // (10**9)) }} and giving {% else %} with {% endif -%}
a per capita income of Cr{{ '{:,d}'.format(area.stats.percapita ) }}.
{%- if area.stats.population > 0 %} {{ high_pop_worlds(plural, area) }}
{%- if area.stats.TLmean > 0 %} The average [[Technology Level|technology level]] is {{area.stats.TLmean|int}} (with most between {{(area.stats.TLmean - area.stats.TLstddev)|int}} and {{(area.stats.TLmean + area.stats.TLstddev)|int}}). {{ high_tech_worlds(plural, area) }}
{%- endif -%}{%- endif -%}{%- endif -%}
{%- endmacro -%}

{%- macro uwp_table(table_name, uwp_code, global_stats) -%}
{| class="wikitable"
|+ colspan=3 style="text-align:center" | {{ table_name }}
! Code !! Count !! % by Pop !! Per Capita
{%- for code,stats in uwp_code | dictsort %}
|-
| {{ code }} || {{stats.number}} 
| {%- if global_stats.population > 0 -%} {{ "{:5.2f}".format(stats.population / (global_stats.population / 100.0)) }}% {%- else -%} 0% {%- endif %}
| {{ stats.percapita }}
{%- endfor %}
|}
{%- endmacro -%}


{%- macro population_groups(plural, area) -%}
{%- if area.stats.populations -%}
{{'{{'}}NavigationBox
 |Title={{area.stats.populations | count}} identified sophont populations in {{ area.name }}
 |Image=
 |Category=
 |List = <div style="text-align: left;font-size: 90%; padding: 0.5em 1em; -webkit-column-count: 2; -moz-column-count: 2; column-count: 2;">
{%- for code, pop in area.stats.populations | dictsort(by='value', reverse=True) %}
* {{'{{'}}SophontCode|{{code}}{%- if pop.homeworlds -%}|{{area.name}}{%- endif -%}{{'}}'}}: {{population(pop.population)}} on
{%- if pop.homeworlds %} their homeworld{% if pop.count > 1 %} and {{ get_count(plural, pop.count - 1, 'world') }}{%- endif -%}
{%- else %} {{ get_count(plural, pop.count, 'world') }}{% endif -%}.
{%- endfor -%}
</div>{{'}}'}}
{%- endif -%}
{%- endmacro -%}


{%- macro homeworld_list(plural, area) -%}
<div class="toccolours inlineb" style="clear: left; margin: 0.5em auto; text-align: left; padding: 0em; border-radius: 4px; max-width: 94%; overflow: hidden">
<div style="padding-top: 0.2em; padding-bottom: 0.2em; background:#ccccff; font-weight:bold; text-align: center"> 
{{ area.stats.homeworlds | count }} identified homeworlds in {{ area.name }}</div>
<div style="font-size: 90%; padding: 0.5em 1em; -webkit-column-count: 2; -moz-column-count: 2; column-count: 2;"><ul style="margin-top: 0;">
{%- for homeworld in area.stats.homeworlds -%}
{%- if homeworld.name -%}
<li>{{'{{'}}SophontHomeWorld|{{homeworld.wiki_short_name()}}{{'}}'}}</li>
{%- else -%}
<li>{{ homeworld.wiki_name() }} </li>
{%- endif -%}
{%- endfor -%}
</ul></div></div>
{%- endmacro -%}


{%- macro bases(plural, bases, area) -%}
{%- if bases -%}
The worlds in {{ area.name }} maintain
{%- for base, count in bases | dictsort(by='value', reverse=True) -%}
{%- if loop.last and loop.length > 1 %} and{%- endif %} {{ get_count(plural, count, base) }}{%- if not loop.last -%},{%- endif -%}
{%- endfor %}. {% endif -%}
{%- endmacro -%}
